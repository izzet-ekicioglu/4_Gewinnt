10:38:52.028: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.032: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.033: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.033: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.033: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.034: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.034: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.041: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.041: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.042: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.043: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.045: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.045: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.045: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.046: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.046: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.046: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.046: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.046: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.047: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.047: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.047: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.047: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf -1.
10:38:52.048: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.048: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.048: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.048: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.049: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 1) auf 1.
10:38:52.049: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.049: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.050: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.050: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.050: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 0) auf -1.
10:38:52.050: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.050: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.051: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.051: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.051: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.051: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.059: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.059: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.060: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.060: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.060: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.062: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.062: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.062: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.064: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.065: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.067: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.068: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.068: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.069: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf -1.
10:38:52.069: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.071: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.072: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.072: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.072: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 1) auf 1.
10:38:52.073: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.078: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.079: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.079: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.079: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 0) auf -1.
10:38:52.079: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.080: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.081: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.081: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.081: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.081: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.082: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.083: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0

10:38:52.083: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.083: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.083: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.085: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.085: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.085: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.085: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.085: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.087: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.087: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.087: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.088: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf -1.
10:38:52.088: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.089: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.089: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.089: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.089: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 1) auf 1.
10:38:52.090: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.091: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.092: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.092: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.092: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 0) auf -1.
10:38:52.092: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.093: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.094: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.094: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.094: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.095: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.096: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.096: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1

10:38:52.097: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.097: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.097: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.098: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.098: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1

10:38:52.098: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.099: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.099: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.100: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.101: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1

10:38:52.101: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.101: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:52.101: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.103: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.103: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1

10:38:52.103: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.103: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:52.103: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.104: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.105: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1

10:38:52.105: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.105: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.105: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.106: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.107: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.107: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.107: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:52.108: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.109: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.110: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.110: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.110: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:52.110: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.111: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.112: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.112: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.112: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.112: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.113: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.120: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.120: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.121: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf -1.
10:38:52.122: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.126: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.127: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.128: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.128: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:52.128: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.129: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.130: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.130: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.130: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf -1.
10:38:52.130: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.132: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.132: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.132: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.132: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 1) auf 1.
10:38:52.132: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.133: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.133: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.134: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.134: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 1) auf -1.
10:38:52.134: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.135: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.135: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.135: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.135: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 1) auf 1.
10:38:52.136: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.136: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.137: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.137: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.137: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 0) auf -1.
10:38:52.137: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.138: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.138: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.138: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.138: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 0) auf 1.
10:38:52.139: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.139: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.139: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.139: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.139: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 0) auf -1.
10:38:52.139: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.140: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.140: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.141: TEST - tests.VierGewinntTest >> <play(int column)> Erfolgreich getestet.
10:38:52.150: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.151: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.151: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.151: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.151: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.151: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.151: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.151: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.152: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.152: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.152: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.152: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.152: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.152: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.152: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.153: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.153: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.153: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.154: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.154: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.154: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.154: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.154: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf -1.
10:38:52.154: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.154: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.155: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.155: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.155: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 1) auf 1.
10:38:52.155: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.155: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.155: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.155: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 0.
10:38:52.156: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 0) auf -1.
10:38:52.156: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.156: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.156: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.156: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.156: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.156: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.157: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.157: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.158: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.158: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.158: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.158: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.159: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.159: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.159: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.159: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.160: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.160: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.160: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.160: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf -1.
10:38:52.160: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.161: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.161: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.162: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.162: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 1) auf 1.
10:38:52.162: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.163: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.163: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.163: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 1.
10:38:52.163: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 0) auf -1.
10:38:52.164: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.165: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.165: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.165: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.165: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.165: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.166: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.166: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0

10:38:52.166: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.167: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.167: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.167: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.168: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.168: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.168: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.168: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.169: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.169: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.169: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.169: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf -1.
10:38:52.169: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.170: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.170: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.170: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.171: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 1) auf 1.
10:38:52.171: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.171: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.172: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.172: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 2.
10:38:52.172: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 0) auf -1.
10:38:52.172: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.173: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.173: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.173: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.173: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.173: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.174: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.174: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1

10:38:52.174: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.174: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.175: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.175: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.176: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1

10:38:52.176: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.176: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.176: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.177: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.177: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1

10:38:52.177: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.178: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:52.178: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.178: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.178: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1

10:38:52.179: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.179: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:52.179: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.180: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.180: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1

10:38:52.180: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.180: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.180: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.181: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.181: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.182: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.182: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:52.182: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.182: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.184: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.184: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.184: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:52.185: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.185: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.186: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.186: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.186: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.186: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.187: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.187: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.187: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.187: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf -1.
10:38:52.187: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.188: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.188: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.188: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.188: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:52.188: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.189: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.189: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.189: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.190: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf -1.
10:38:52.190: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.190: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.192: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.192: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.193: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 1) auf 1.
10:38:52.193: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.194: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.194: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.194: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.194: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 1) auf -1.
10:38:52.194: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.195: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.195: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.195: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.195: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 1) auf 1.
10:38:52.196: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.196: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.197: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.197: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 6.
10:38:52.197: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 0) auf -1.
10:38:52.197: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.198: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.198: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.198: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 5.
10:38:52.198: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 0) auf 1.
10:38:52.198: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.200: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.200: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.200: TEST - tests.VierGewinntTest >> <play(int column)> Spiele in Spalte 4.
10:38:52.200: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 0) auf -1.
10:38:52.200: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.204: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.205: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.205: TEST - tests.VierGewinntTest >> <play(int column)> Erfolgreich getestet.
10:38:52.215: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 0) von -1 zurueck auf 0.
10:38:52.215: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.216: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.217: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.218: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.219: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 0) von 1 zurueck auf 0.
10:38:52.219: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.219: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.220: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.220: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.221: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 0) von -1 zurueck auf 0.
10:38:52.221: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.221: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.222: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.222: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.222: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 1) von 1 zurueck auf 0.
10:38:52.222: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.222: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.223: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.223: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.223: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 1) von -1 zurueck auf 0.
10:38:52.223: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.223: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.224: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.224: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.224: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 1) von 1 zurueck auf 0.
10:38:52.224: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.224: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.225: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.225: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.225: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 2) von -1 zurueck auf 0.
10:38:52.226: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.226: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.226: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.227: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.227: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 2) von 1 zurueck auf 0.
10:38:52.227: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.227: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.227: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.227: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.228: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 2) von -1 zurueck auf 0.
10:38:52.228: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.228: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.228: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.229: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.229: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 3) von 1 zurueck auf 0.
10:38:52.229: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.229: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.229: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.230: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.230: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 3) von -1 zurueck auf 0.
10:38:52.230: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.230: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.230: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.230: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.231: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 3) von 1 zurueck auf 0.
10:38:52.231: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.231: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.231: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.231: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	-1	1	-1
1	1	1	0	1	-1	1

10:38:52.231: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 4) von -1 zurueck auf 0.
10:38:52.231: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.232: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.232: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.232: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	1	-1
1	1	1	0	1	-1	1

10:38:52.232: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 4) von 1 zurueck auf 0.
10:38:52.232: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.232: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.233: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.233: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	-1
1	1	1	0	1	-1	1

10:38:52.233: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 4) von -1 zurueck auf 0.
10:38:52.233: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.233: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.233: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.237: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	1	-1	1

10:38:52.237: INFO - game.VierGewinnt >> <undo()> Setze Position (4 | 5) von 1 zurueck auf 0.
10:38:52.237: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.237: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.238: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.238: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	-1	1

10:38:52.238: INFO - game.VierGewinnt >> <undo()> Setze Position (5 | 5) von -1 zurueck auf 0.
10:38:52.238: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.239: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.239: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.239: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	1

10:38:52.239: INFO - game.VierGewinnt >> <undo()> Setze Position (6 | 5) von 1 zurueck auf 0.
10:38:52.240: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.240: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.240: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.240: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.241: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 0) von -1 zurueck auf 0.
10:38:52.241: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.241: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.241: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.242: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.242: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 1) von 1 zurueck auf 0.
10:38:52.242: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.242: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.243: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.243: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.243: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 2) von -1 zurueck auf 0.
10:38:52.243: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.243: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.244: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.244: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.244: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 3) von 1 zurueck auf 0.
10:38:52.244: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.244: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.245: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.245: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	0	0	0	0

10:38:52.245: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 4) von -1 zurueck auf 0.
10:38:52.245: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.245: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.246: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.246: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	1	0	0	0	0

10:38:52.246: INFO - game.VierGewinnt >> <undo()> Setze Position (2 | 5) von 1 zurueck auf 0.
10:38:52.246: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.246: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.247: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.247: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.247: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 0) von -1 zurueck auf 0.
10:38:52.247: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.247: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.248: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.248: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.248: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 1) von 1 zurueck auf 0.
10:38:52.248: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.248: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.249: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.249: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.249: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 2) von -1 zurueck auf 0.
10:38:52.249: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.249: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.249: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.250: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.250: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 3) von 1 zurueck auf 0.
10:38:52.250: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.250: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.250: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.250: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	-1	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.250: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 4) von -1 zurueck auf 0.
10:38:52.251: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.251: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.251: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.251: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	1	0	0	0	0	0

10:38:52.251: INFO - game.VierGewinnt >> <undo()> Setze Position (1 | 5) von 1 zurueck auf 0.
10:38:52.251: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.251: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.251: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.252: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.252: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 0) von -1 zurueck auf 0.
10:38:52.252: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.252: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.252: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.252: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.252: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 1) von 1 zurueck auf 0.
10:38:52.252: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.252: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.252: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.253: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.253: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 2) von -1 zurueck auf 0.
10:38:52.253: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.253: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.253: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.253: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.253: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 3) von 1 zurueck auf 0.
10:38:52.253: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.253: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.253: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.254: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.254: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 4) von -1 zurueck auf 0.
10:38:52.254: INFO - game.VierGewinnt >> <undo()> Spieler 2 am Zug.
10:38:52.254: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.254: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.254: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0

10:38:52.254: INFO - game.VierGewinnt >> <undo()> Setze Position (0 | 5) von 1 zurueck auf 0.
10:38:52.254: INFO - game.VierGewinnt >> <undo()> Spieler 1 am Zug.
10:38:52.254: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.254: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.255: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0

10:38:52.255: TEST - tests.VierGewinntTest >> <undo()> Assertion Error.
10:38:52.256: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.256: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.256: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.257: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.257: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.257: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.257: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.257: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf -1.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.258: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 1) auf 1.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.258: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 0) auf -1.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.258: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.258: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.259: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.259: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.259: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.259: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.260: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf -1.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.260: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 1) auf 1.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.260: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 0) auf -1.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.260: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.260: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.261: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.261: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.261: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.261: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.261: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf -1.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.262: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 1) auf 1.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.262: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 0) auf -1.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.262: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.262: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.262: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.263: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.263: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.263: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.263: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf -1.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.264: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 1) auf 1.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.264: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 0) auf -1.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.264: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.264: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.265: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.265: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.265: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.265: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.266: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf -1.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.266: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 1) auf 1.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.266: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 0) auf -1.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.266: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.266: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.267: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.267: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.267: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.267: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.268: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf -1.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.268: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 1) auf 1.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.268: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 0) auf -1.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.268: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.268: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.269: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.269: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.269: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.269: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf -1.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.269: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.269: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 1) auf 1.
10:38:52.270: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.270: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.270: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 0) auf -1.
10:38:52.270: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.270: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.270: TEST - tests.VierGewinntTest >> <getHistory()> Erfolgreich getestet.
10:38:52.271: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.271: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.272: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.272: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.272: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf 1.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.272: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.272: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.273: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.273: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.273: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.273: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf -1.
10:38:52.273: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.273: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.273: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf 1.
10:38:52.273: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.273: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.274: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.274: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.274: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.274: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.274: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.275: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf 1.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.275: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.275: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.275: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf -1.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.275: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf 1.
10:38:52.275: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.276: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.276: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.276: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.276: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.276: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.276: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.277: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.277: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.277: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.277: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf -1.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.277: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.278: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf 1.
10:38:52.278: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.278: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.278: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.278: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.278: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.278: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.278: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.279: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.279: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.279: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.279: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.279: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.279: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.280: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf -1.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.280: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.280: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.280: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.280: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.280: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.281: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.281: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.281: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.281: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.282: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.282: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.282: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.282: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf 1.
10:38:52.282: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.282: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.283: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.283: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.283: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.283: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf -1.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.283: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.284: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.284: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.284: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.284: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf -1.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.284: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.285: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.285: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.285: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.285: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.285: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.285: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.286: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.286: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.286: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.286: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf 1.
10:38:52.286: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.286: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.286: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.287: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.287: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.287: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.287: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf 1.
10:38:52.288: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.288: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.288: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.288: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.288: TEST - tests.VierGewinntTest >> <hasWon()> Fuer vertikale Siegespositionen erfolgreich getestet.
10:38:52.293: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.293: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.293: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.293: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.294: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.294: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.294: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.294: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.294: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.294: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.295: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.295: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.295: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.295: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.295: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.296: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.296: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.296: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.297: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.297: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.297: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.297: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.297: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.297: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.298: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.298: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.298: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.298: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.298: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.298: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.299: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.299: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.299: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.299: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.299: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.299: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.299: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.300: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.300: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.300: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.300: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.300: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.300: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.300: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.301: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.301: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.301: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.301: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.301: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.301: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.302: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:52.302: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.302: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.302: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.302: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.303: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.303: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.303: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:52.303: TEST - tests.VierGewinntTest >> <hasWon()> Fuer horizontale Siegespositionen erfolgreich getestet.
10:38:52.321: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.322: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.322: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.322: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf 1.
10:38:52.322: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.323: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.323: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.323: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.323: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.323: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.324: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.324: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.324: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.324: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.324: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.324: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.325: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.325: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.325: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.327: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.327: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:38:52.327: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.328: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.328: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.328: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.328: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.328: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.328: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.328: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.328: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.329: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.329: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.330: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.330: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.330: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.330: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.330: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.330: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.330: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.331: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.331: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.331: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.331: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf 1.
10:38:52.331: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.332: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.332: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.332: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.332: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.332: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.332: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.333: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.333: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.333: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.333: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.333: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.333: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.334: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.334: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:52.334: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.335: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.335: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:52.335: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.335: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.335: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.335: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.336: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.336: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:52.336: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.336: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.336: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.337: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.337: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.337: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.337: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.337: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.337: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.337: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.337: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.338: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf -1.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.338: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.338: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:52.338: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.339: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.339: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:52.339: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.339: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.339: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.339: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.340: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.340: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf 1.
10:38:52.340: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.340: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.340: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.340: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.340: TEST - tests.VierGewinntTest >> <hasWon()> Fuer diagonal-aufsteigende Siegespositionen erfolgreich getestet.
10:38:52.343: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.343: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.343: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.343: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.344: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.344: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.344: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf 1.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.344: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.344: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.344: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.362: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.362: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:52.362: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.362: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.362: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:52.362: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.363: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.363: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf -1.
10:38:52.363: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.363: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.363: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.363: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.363: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.364: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.364: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.364: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.364: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.364: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.364: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.364: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.364: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf 1.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.365: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.365: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.365: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.365: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.366: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:52.366: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.367: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.367: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf -1.
10:38:52.367: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.379: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.379: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:52.379: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.380: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.380: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.380: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.380: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.380: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.380: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.380: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.380: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.381: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf 1.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.381: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.381: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.381: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.381: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.382: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.382: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:52.382: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.382: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.382: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf -1.
10:38:52.382: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.383: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.383: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:52.383: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.383: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.383: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.384: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.384: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.384: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.384: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.384: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.384: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:52.384: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.385: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.385: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.385: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.385: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:52.385: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.386: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.386: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:52.386: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.386: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.386: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf -1.
10:38:52.386: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.387: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.387: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:52.387: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.387: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.387: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:52.387: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:52.387: TEST - tests.VierGewinntTest >> <hasWon()> Fuer diagonal-absteigende Siegespositionen erfolgreich getestet.
10:38:52.389: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:52.389: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.389: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.389: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf 1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf -1.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:52.390: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:52.390: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:52.401: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 100
10:38:52.402: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:52.407: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:52.409: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:52.414: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:52.414: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 0
10:38:52.907: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 16 || 15 || 6 || 15 || 12 || 14 |
10:38:52.913: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 30%
10:38:52.922: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 15 || 15 || 12 || 15 || 19 || 18 |
10:38:52.924: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 37%
10:38:53.129: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 18 || 9 || 4 || 13 || 10 || 15 |
10:38:53.129: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:53.205: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 22 || 22 || 14 || 17 || 23 || 29 |
10:38:53.205: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:53.381: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 17 || 18 || 9 || 11 || 20 || 12 |
10:38:53.381: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:38:53.392: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 17 || 8 || 14 || 6 || 11 || 14 |
10:38:53.392: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 28%
10:38:53.478: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 20 || 16 || 7 || 9 || 15 || 21 |
10:38:53.479: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:38:53.479: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 50
10:38:53.480: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 100 || 50 || 0 || 0 || 0 || 0 || 0 |
10:38:53.482: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 0. Benoetigte Rechenzeit 1090ms.
10:38:53.482: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf 1.
10:38:53.482: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.482: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:53.482: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:53.482: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	0	0	0	0	0	0
1	-1	0	0	0	0	0
1	-1	0	0	0	0	0
1	-1	0	0	0	0	0

10:38:53.483: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:53.483: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:53.483: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.483: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:53.483: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf 1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf -1.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:53.484: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:53.484: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:53.484: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 100
10:38:53.485: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:53.484: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:53.486: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 0
10:38:53.484: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:53.485: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:53.789: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 10 || 17 || 4 || 9 || 9 || 20 |
10:38:53.789: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:53.844: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 15 || 10 || 13 || 10 || 8 || 18 |
10:38:53.844: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 28%
10:38:53.934: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 30 || 16 || 25 || 23 || 13 || 15 |
10:38:53.935: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 45%
10:38:54.029: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 19 || 21 || 11 || 9 || 8 || 13 |
10:38:54.030: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:38:54.083: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 13 || 13 || 15 || 8 || 11 || 15 |
10:38:54.083: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 31%
10:38:54.099: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 30 || 13 || 5 || 16 || 19 || 18 |
10:38:54.099: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 38%
10:38:54.159: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 23 || 13 || 11 || 16 || 14 || 17 |
10:38:54.160: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 39%
10:38:54.160: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 45
10:38:54.160: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 100 || 45 || 0 || 0 || 0 || 0 |
10:38:54.160: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 1. Benoetigte Rechenzeit 676ms.
10:38:54.160: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf 1.
10:38:54.160: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.160: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:54.160: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:54.160: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	1	0	0	0	0	0
0	1	-1	0	0	0	0
0	1	-1	0	0	0	0
0	1	-1	0	0	0	0

10:38:54.160: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:54.160: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf -1.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.161: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.161: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:54.161: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:54.161: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:54.162: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 100
10:38:54.162: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:54.163: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 0
10:38:54.161: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:54.382: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 9 || 4 || 17 || 17 || 9 || 7 || 15 |
10:38:54.382: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 26%
10:38:54.388: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 33 || 24 || 30 || 21 || 18 || 12 || 13 |
10:38:54.389: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:54.393: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 16 || 18 || 13 || 9 || 10 || 12 |
10:38:54.393: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 31%
10:38:54.442: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 13 || 23 || 20 || 15 || 15 || 15 |
10:38:54.442: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 39%
10:38:54.501: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 13 || 13 || 22 || 16 || 10 || 11 |
10:38:54.501: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 33%
10:38:54.564: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 6 || 16 || 18 || 17 || 13 || 19 |
10:38:54.564: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 33%
10:38:54.578: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 11 || 21 || 18 || 19 || 21 || 11 || 29 |
10:38:54.578: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:38:54.578: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 50
10:38:54.578: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 100 || 50 || 0 || 0 || 0 |
10:38:54.578: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 2. Benoetigte Rechenzeit 417ms.
10:38:54.578: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf 1.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.578: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:54.578: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	1	0	0	0	0
0	0	1	-1	0	0	0
0	0	1	-1	0	0	0
0	0	1	-1	0	0	0

10:38:54.578: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:54.578: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.578: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:54.578: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.578: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf -1.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:54.579: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:54.579: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:54.579: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:54.580: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:54.580: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:54.579: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:54.580: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 0
10:38:54.583: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 100
10:38:54.795: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 33 || 29 || 21 || 25 || 35 || 20 || 32 |
10:38:54.795: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 65%
10:38:54.811: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 30 || 20 || 29 || 15 || 18 || 24 |
10:38:54.811: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:38:54.871: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 23 || 20 || 28 || 20 || 18 || 12 |
10:38:54.876: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 46%
10:38:54.888: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 25 || 19 || 25 || 28 || 29 || 25 |
10:38:54.889: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:38:54.909: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 11 || 15 || 29 || 15 || 20 || 18 |
10:38:54.909: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:38:54.988: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 29 || 20 || 19 || 13 || 23 || 17 |
10:38:54.988: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 49%
10:38:55.004: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 21 || 25 || 12 || 21 || 9 || 16 |
10:38:55.004: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 42%
10:38:55.011: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 65
10:38:55.011: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 100 || 65 || 0 || 0 |
10:38:55.011: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 3. Benoetigte Rechenzeit 432ms.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:55.012: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	1	0	0	0
0	0	0	1	-1	0	0
0	0	0	1	-1	0	0
0	0	0	1	-1	0	0

10:38:55.012: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.012: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.012: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.012: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:55.012: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 100
10:38:55.013: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:55.013: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:55.013: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:55.013: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:55.013: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:55.264: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 30 || 18 || 18 || 32 || 37 || 31 |
10:38:55.264: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 63%
10:38:55.277: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 20 || 15 || 15 || 33 || 34 || 25 |
10:38:55.278: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:38:55.279: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 27 || 22 || 21 || 11 || 26 || 24 || 27 |
10:38:55.279: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 53%
10:38:55.296: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 27 || 14 || 27 || 13 || 28 || 22 || 28 |
10:38:55.296: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 53%
10:38:55.414: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 18 || 11 || 20 || 31 || 28 || 27 |
10:38:55.414: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:55.461: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 17 || 20 || 20 || 31 || 25 || 29 |
10:38:55.461: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 54%
10:38:55.462: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 35 || 30 || 17 || 26 || 40 || 28 || 30 |
10:38:55.462: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 69%
10:38:55.462: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 69
10:38:55.462: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 0 || 100 || 69 || 0 |
10:38:55.462: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 4. Benoetigte Rechenzeit 450ms.
10:38:55.462: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf 1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:55.463: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	1	0	0
0	0	0	0	1	-1	0
0	0	0	0	1	-1	0
0	0	0	0	1	-1	0

10:38:55.463: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.463: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf -1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf -1.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.463: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.463: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:55.463: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:55.464: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:55.464: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:55.464: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 100
10:38:55.464: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:55.464: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:55.669: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 30 || 18 || 29 || 23 || 30 || 22 |
10:38:55.669: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:38:55.694: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 17 || 16 || 17 || 25 || 31 || 23 |
10:38:55.694: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 49%
10:38:55.729: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 31 || 23 || 16 || 20 || 33 || 17 |
10:38:55.729: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 54%
10:38:55.800: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 26 || 28 || 18 || 29 || 23 || 31 |
10:38:55.801: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 61%
10:38:55.962: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 20 || 29 || 18 || 18 || 26 || 19 |
10:38:55.962: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 47%
10:38:55.962: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 35 || 24 || 31 || 29 || 33 || 33 || 32 |
10:38:55.962: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 72%
10:38:55.967: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 19 || 22 || 17 || 23 || 27 || 26 |
10:38:55.967: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:55.967: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 72
10:38:55.967: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 0 || 0 || 100 || 72 |
10:38:55.967: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 5. Benoetigte Rechenzeit 504ms.
10:38:55.967: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:55.967: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.967: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.967: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:55.968: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	1	0
0	0	0	0	0	1	-1
0	0	0	0	0	1	-1
0	0	0	0	0	1	-1

10:38:55.968: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:55.968: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf 1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf -1.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:55.968: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:55.968: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:55.968: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:55.969: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:55.968: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:55.969: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:55.969: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:55.969: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 100
10:38:56.124: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 13 || 13 || 6 || 12 || 14 || 16 |
10:38:56.124: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:56.150: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 15 || 10 || 6 || 6 || 21 || 16 |
10:38:56.150: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:56.167: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 14 || 12 || 7 || 12 || 14 || 14 |
10:38:56.168: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:56.246: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 13 || 17 || 9 || 18 || 16 || 16 |
10:38:56.246: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 35%
10:38:56.303: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 17 || 30 || 15 || 23 || 23 || 22 |
10:38:56.303: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:38:56.398: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 9 || 5 || 7 || 12 || 14 || 15 |
10:38:56.399: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 25%
10:38:56.411: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 16 || 7 || 2 || 10 || 9 || 15 |
10:38:56.412: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 27%
10:38:56.412: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 52
10:38:56.412: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 0 || 0 || 52 || 100 |
10:38:56.412: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 6. Benoetigte Rechenzeit 444ms.
10:38:56.412: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf 1.
10:38:56.412: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.412: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:56.412: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:56.412: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	1
0	0	0	0	0	-1	1
0	0	0	0	0	-1	1
0	0	0	0	0	-1	1

10:38:56.412: INFO - game.VierGewinnt >> <hasWon()> Vertikale Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:56.412: TEST - tests.VierGewinntTest >> <bestMove()> Fuer vertikale Siegespositionen erfolgreich getestet.
10:38:56.414: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:56.414: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:56.414: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:56.531: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 7 || 4 || 8 || 0 || 3 || 12 || 5 |
10:38:56.532: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 13%
10:38:56.533: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 3 || 2 || 3 || 0 || 7 || 8 || 4 |
10:38:56.533: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 9%
10:38:56.567: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 6 || 9 || 0 || 6 || 11 || 8 |
10:38:56.567: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:56.584: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 4 || 5 || 0 || 11 || 9 || 5 |
10:38:56.584: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 13%
10:38:56.741: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 16 || 6 || 13 || 12 || 14 || 17 |
10:38:56.741: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:38:56.776: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 14 || 8 || 14 || 16 || 15 || 23 |
10:38:56.776: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 33%
10:38:56.794: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 18 || 12 || 13 || 12 || 13 || 16 |
10:38:56.794: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 33%
10:38:56.819: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 8 || 8 || 12 || 17 || 13 || 14 |
10:38:56.819: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:38:56.850: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 1 || 2 || 0 || 8 || 6 || 10 |
10:38:56.850: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 12%
10:38:56.905: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 1 || 5 || 0 || 6 || 7 || 9 |
10:38:56.905: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 11%
10:38:56.923: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 7 || 7 || 5 || 0 || 10 || 8 || 13 |
10:38:56.923: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 17%
10:38:56.929: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 6 || 6 || 2 || 0 || 9 || 6 || 12 |
10:38:56.929: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 14%
10:38:56.972: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 9 || 4 || 0 || 7 || 8 || 1 |
10:38:56.972: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 12%
10:38:57.027: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 4 || 6 || 0 || 8 || 9 || 5 |
10:38:57.027: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 12%
10:38:57.066: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 3 || 2 || 0 || 9 || 4 || 5 |
10:38:57.066: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 9%
10:38:57.106: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 2 || 13 || 5 || 0 || 6 || 11 || 12 |
10:38:57.106: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.112: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 10 || 4 || 0 || 8 || 8 || 7 |
10:38:57.112: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.163: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 10 || 15 || 0 || 9 || 13 || 15 |
10:38:57.163: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 22%
10:38:57.198: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 9 || 11 || 5 || 0 || 7 || 12 || 3 |
10:38:57.198: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.214: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 5 || 6 || 0 || 7 || 9 || 8 |
10:38:57.214: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 13%
10:38:57.291: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 8 || 6 || 0 || 7 || 11 || 9 |
10:38:57.291: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 17%
10:38:57.304: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 5 || 7 || 0 || 10 || 7 || 8 |
10:38:57.304: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.313: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 3 || 4 || 7 || 0 || 9 || 13 || 3 |
10:38:57.313: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 13%
10:38:57.314: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 32
10:38:57.314: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 100
10:38:57.322: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 3 || 10 || 0 || 8 || 10 || 10 |
10:38:57.322: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.409: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 6 || 3 || 0 || 4 || 7 || 4 |
10:38:57.410: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 9%
10:38:57.411: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 29
10:38:57.424: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 4 || 6 || 4 || 0 || 3 || 6 || 8 |
10:38:57.424: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 10%
10:38:57.425: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 33
10:38:57.426: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 2 || 6 || 0 || 7 || 9 || 13 |
10:38:57.427: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 15%
10:38:57.495: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 11 || 5 || 8 || 0 || 11 || 9 || 8 |
10:38:57.495: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 17%
10:38:57.540: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 11 || 8 || 5 || 0 || 7 || 9 || 7 |
10:38:57.541: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.546: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 6 || 8 || 0 || 10 || 7 || 8 |
10:38:57.547: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 15%
10:38:57.595: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 6 || 5 || 6 || 0 || 7 || 6 || 6 |
10:38:57.595: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 12%
10:38:57.617: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 15 || 2 || 0 || 7 || 11 || 4 |
10:38:57.617: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 18%
10:38:57.618: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 33
10:38:57.636: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 3 || 16 || 17 || 11 || 6 || 10 |
10:38:57.638: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 24%
10:38:57.703: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 3 || 1 || 6 || 0 || 7 || 14 || 6 |
10:38:57.703: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 12%
10:38:57.708: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 6 || 6 || 0 || 11 || 8 || 6 |
10:38:57.709: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 15%
10:38:57.735: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 12 || 12 || 0 || 12 || 11 || 3 |
10:38:57.735: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 19%
10:38:57.745: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 7 || 1 || 3 || 0 || 11 || 5 || 6 |
10:38:57.745: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 11%
10:38:57.745: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 24
10:38:57.801: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 3 || 3 || 12 || 0 || 11 || 8 || 10 |
10:38:57.801: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.857: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 5 || 8 || 0 || 2 || 6 || 7 |
10:38:57.857: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 11%
10:38:57.881: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 13 || 16 || 8 || 14 || 13 || 15 |
10:38:57.881: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 30%
10:38:57.885: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 9 || 3 || 3 || 0 || 4 || 4 || 6 |
10:38:57.885: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 10%
10:38:57.912: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 6 || 6 || 0 || 10 || 8 || 11 |
10:38:57.913: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:38:57.913: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 30
10:38:57.913: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 24 || 33 || 30 || 100 || 32 || 33 || 29 |
10:38:57.913: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 3. Benoetigte Rechenzeit 1499ms.
10:38:57.913: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.913: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:57.913: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
-1	-1	-1	0	0	0	0
1	1	1	1	0	0	0

10:38:57.913: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.913: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.913: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:57.913: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.913: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.913: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.913: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.914: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.914: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.914: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.914: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.914: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:57.914: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 100
10:38:57.914: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 100
10:38:57.915: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 98
10:38:57.916: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 98
10:38:57.917: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 98
10:38:57.917: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 98
10:38:57.917: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 98
10:38:57.917: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 100 || 98 || 98 || 98 || 100 || 98 || 98 |
10:38:57.917: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 0. Benoetigte Rechenzeit 3ms.
10:38:57.917: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:57.917: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.917: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.917: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:57.917: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	-1	-1	-1	0	0	0
1	1	1	1	0	0	0

10:38:57.918: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.918: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.918: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.918: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:57.918: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 100
10:38:57.919: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 98
10:38:57.920: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 98
10:38:57.921: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 98
10:38:57.921: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 100
10:38:57.922: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 98
10:38:57.924: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 98
10:38:57.924: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 98 || 100 || 98 || 98 || 98 || 100 || 98 |
10:38:57.924: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 1. Benoetigte Rechenzeit 6ms.
10:38:57.924: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:57.924: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.924: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.924: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:57.924: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	-1	-1	-1	0	0
0	1	1	1	1	0	0

10:38:57.924: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.924: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:57.924: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.924: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.924: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:57.924: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:57.924: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.925: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.925: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:57.926: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 98
10:38:57.926: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 98
10:38:57.927: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 100
10:38:57.927: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 98
10:38:57.928: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 100
10:38:57.928: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 98
10:38:57.928: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 98
10:38:57.929: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 98 || 98 || 100 || 98 || 98 || 98 || 100 |
10:38:57.929: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 2. Benoetigte Rechenzeit 4ms.
10:38:57.929: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:57.929: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.929: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.929: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:57.929: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	-1	-1	-1	0
0	0	1	1	1	1	0

10:38:57.929: INFO - game.VierGewinnt >> <hasWon()> Horizontale Siegesposition gefunden. Spieler  hat gewonnen.
10:38:57.929: TEST - tests.VierGewinntTest >> <bestMove()> Fuer horizontale Siegespositionen erfolgreich getestet.
10:38:57.931: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.932: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:57.932: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.932: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.932: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.932: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf 1.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.933: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.933: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.933: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.933: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:38:57.933: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.934: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.934: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:57.934: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:57.934: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:57.934: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 0
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 100
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:57.935: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:58.072: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 33 || 24 || 25 || 34 || 36 || 29 || 38 |
10:38:58.073: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:38:58.122: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 18 || 17 || 28 || 15 || 27 || 28 |
10:38:58.135: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:38:58.173: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 15 || 22 || 26 || 16 || 21 || 27 |
10:38:58.173: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:58.232: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 24 || 18 || 22 || 27 || 23 || 22 |
10:38:58.233: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 53%
10:38:58.236: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 32 || 34 || 40 || 31 || 24 || 34 |
10:38:58.236: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:38:58.267: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 22 || 13 || 25 || 24 || 26 || 17 |
10:38:58.267: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 48%
10:38:58.303: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 15 || 27 || 33 || 24 || 31 || 20 |
10:38:58.303: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:38:58.303: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 73
10:38:58.303: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 100 || 73 || 0 || 0 |
10:38:58.303: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 3. Benoetigte Rechenzeit 369ms.
10:38:58.303: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:38:58.303: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.303: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.303: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:58.304: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	1	0	0	0
0	0	1	1	0	0	0
-1	1	1	-1	0	0	0
1	-1	-1	-1	0	0	0

10:38:58.304: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.304: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.304: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.304: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:58.304: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 100
10:38:58.305: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:58.305: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 0
10:38:58.305: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:58.305: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:58.305: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:58.425: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 32 || 14 || 26 || 24 || 34 || 25 |
10:38:58.426: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 59%
10:38:58.462: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 37 || 38 || 36 || 28 || 32 || 28 |
10:38:58.462: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 77%
10:38:58.474: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 15 || 28 || 8 || 21 || 31 || 35 |
10:38:58.474: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:38:58.523: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 23 || 20 || 14 || 30 || 24 || 23 |
10:38:58.525: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:38:58.575: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 31 || 39 || 25 || 29 || 33 || 44 |
10:38:58.575: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 80%
10:38:58.596: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 22 || 14 || 13 || 28 || 26 || 31 |
10:38:58.596: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:38:58.604: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 32 || 24 || 19 || 25 || 21 || 19 |
10:38:58.605: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:38:58.605: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 80
10:38:58.605: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 0 || 100 || 80 || 0 |
10:38:58.605: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 4. Benoetigte Rechenzeit 301ms.
10:38:58.605: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf 1.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.605: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:58.605: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	1	0	0
0	0	0	1	1	0	0
0	-1	1	1	-1	0	0
0	1	-1	-1	-1	0	0

10:38:58.605: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.605: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.605: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:58.605: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.605: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.605: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.605: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:58.605: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf -1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.606: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.606: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:58.607: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 0
10:38:58.607: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 0
10:38:58.607: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 0
10:38:58.607: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 0
10:38:58.608: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 100
10:38:58.619: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 0
10:38:58.740: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 45 || 35 || 29 || 34 || 22 || 44 || 27 |
10:38:58.741: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 79%
10:38:58.775: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 23 || 25 || 33 || 36 || 38 || 24 |
10:38:58.775: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:38:58.793: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 26 || 23 || 17 || 19 || 26 || 20 |
10:38:58.793: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 51%
10:38:58.800: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 18 || 26 || 21 || 20 || 24 || 29 |
10:38:58.800: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:38:58.876: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 20 || 15 || 17 || 22 || 25 || 28 |
10:38:58.876: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:38:58.911: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 41 || 25 || 36 || 22 || 22 || 22 || 23 |
10:38:58.911: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 64%
10:38:58.914: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 21 || 17 || 18 || 16 || 21 || 24 |
10:38:58.915: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 44%
10:38:58.915: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 79
10:38:58.915: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 0 || 0 || 0 || 0 || 0 || 100 || 79 |
10:38:58.915: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 5. Benoetigte Rechenzeit 309ms.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 2) auf 1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:58.915: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	1	0
0	0	0	0	1	1	0
0	0	-1	1	1	-1	0
0	0	1	-1	-1	-1	0

10:38:58.915: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:58.915: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.915: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.915: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:38:58.915: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf -1.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 3) auf 1.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 4) auf -1.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 3) auf 1.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:58.916: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:58.916: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:38:58.916: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 100
10:38:58.917: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 98
10:38:58.919: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 98
10:38:58.919: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 98
10:38:59.056: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 39 || 32 || 29 || 28 || 42 || 24 |
10:38:59.056: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:38:59.058: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 34 || 36 || 22 || 22 || 25 || 37 |
10:38:59.058: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 70%
10:38:59.070: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 33 || 37 || 15 || 24 || 36 || 31 |
10:38:59.070: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:38:59.150: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 27 || 23 || 20 || 29 || 27 || 31 || 39 |
10:38:59.150: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 65%
10:38:59.179: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 33 || 24 || 38 || 22 || 27 || 20 |
10:38:59.179: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 65%
10:38:59.208: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 32 || 29 || 35 || 26 || 23 || 29 |
10:38:59.208: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:38:59.293: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 17 || 18 || 21 || 21 || 22 || 34 |
10:38:59.294: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:38:59.304: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 20 || 17 || 18 || 17 || 16 || 27 |
10:38:59.305: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 51%
10:38:59.365: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 18 || 20 || 23 || 26 || 32 || 39 |
10:38:59.365: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 60%
10:38:59.429: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 31 || 28 || 38 || 21 || 31 || 32 || 32 |
10:38:59.430: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:38:59.447: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 40 || 41 || 43 || 28 || 29 || 28 || 31 |
10:38:59.447: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 80%
10:38:59.456: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 30 || 38 || 34 || 37 || 19 || 32 |
10:38:59.456: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:38:59.568: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 32 || 36 || 24 || 29 || 20 || 20 |
10:38:59.568: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 62%
10:38:59.578: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 14 || 28 || 17 || 22 || 20 || 23 |
10:38:59.578: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 49%
10:38:59.589: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 29 || 27 || 25 || 29 || 22 || 28 || 30 |
10:38:59.589: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 63%
10:38:59.692: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 26 || 28 || 23 || 18 || 23 || 33 |
10:38:59.693: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 60%
10:38:59.708: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 37 || 23 || 21 || 24 || 27 || 29 |
10:38:59.709: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 61%
10:38:59.713: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 19 || 28 || 27 || 28 || 33 || 22 |
10:38:59.713: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 63%
10:38:59.781: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 24 || 26 || 17 || 27 || 26 || 36 |
10:38:59.781: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 60%
10:38:59.782: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 73
10:38:59.802: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 34 || 28 || 27 || 23 || 24 || 31 |
10:38:59.803: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 65%
10:38:59.803: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 71
10:38:59.828: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 23 || 32 || 22 || 26 || 19 || 20 |
10:38:59.828: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 54%
10:38:59.828: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 80
10:38:59.828: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 80 || 71 || 73 || 98 || 98 || 98 || 100 |
10:38:59.828: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 6. Benoetigte Rechenzeit 912ms.
10:38:59.828: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 2) auf 1.
10:38:59.828: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.828: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:59.828: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:38:59.828: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	0	0	0	1
0	0	0	0	0	1	1
0	0	0	-1	1	1	-1
0	0	0	1	-1	-1	-1

10:38:59.828: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Aufsteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:38:59.828: TEST - tests.VierGewinntTest >> <bestMove()> Fuer diagonal-aufsteigende Siegespositionen erfolgreich getestet.
10:38:59.830: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 5) auf 1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 4) auf -1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 3) auf 1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf -1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (0 | 2) auf 1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.830: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.830: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:59.831: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.831: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf 1.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:38:59.831: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf -1.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:38:59.831: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:38:59.831: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:39:00.043: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 21 || 12 || 15 || 22 || 26 || 22 |
10:39:00.047: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 44%
10:39:00.052: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 22 || 16 || 21 || 21 || 13 || 34 |
10:39:00.053: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 48%
10:39:00.064: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 25 || 20 || 19 || 16 || 28 || 35 |
10:39:00.064: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 56%
10:39:00.066: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 31 || 22 || 23 || 19 || 30 || 31 |
10:39:00.066: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:39:00.186: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 16 || 6 || 12 || 0 || 10 || 15 |
10:39:00.187: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 24%
10:39:00.199: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 17 || 13 || 8 || 0 || 11 || 14 |
10:39:00.199: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 25%
10:39:00.225: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 12 || 19 || 17 || 11 || 0 || 20 || 16 |
10:39:00.225: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:39:00.292: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 7 || 12 || 5 || 7 || 0 || 10 || 17 |
10:39:00.292: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 19%
10:39:00.319: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 3 || 18 || 12 || 16 || 0 || 9 || 15 |
10:39:00.319: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 24%
10:39:00.322: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 26 || 19 || 20 || 30 || 28 || 28 |
10:39:00.322: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 59%
10:39:00.334: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 11 || 6 || 10 || 0 || 7 || 16 |
10:39:00.334: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 19%
10:39:00.401: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 11 || 8 || 11 || 0 || 11 || 12 |
10:39:00.401: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 20%
10:39:00.436: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 17 || 12 || 14 || 0 || 8 || 16 |
10:39:00.436: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 27%
10:39:00.449: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 9 || 15 || 8 || 6 || 0 || 11 || 16 |
10:39:00.449: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 22%
10:39:00.510: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 16 || 9 || 8 || 0 || 7 || 16 |
10:39:00.510: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 21%
10:39:00.561: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 9 || 11 || 11 || 4 || 0 || 10 || 11 |
10:39:00.562: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 19%
10:39:00.563: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 0 || 8 || 15 || 0 || 6 || 10 |
10:39:00.563: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 15%
10:39:00.575: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 33 || 15 || 22 || 19 || 24 || 20 |
10:39:00.576: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:39:00.620: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 22 || 13 || 16 || 0 || 17 || 31 |
10:39:00.620: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 40%
10:39:00.673: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 19 || 13 || 20 || 0 || 16 || 21 |
10:39:00.673: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 39%
10:39:00.697: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 18 || 19 || 20 || 0 || 10 || 17 |
10:39:00.697: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:39:00.741: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 21 || 13 || 17 || 0 || 15 || 13 |
10:39:00.742: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:39:00.743: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 44
10:39:00.743: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 100
10:39:00.779: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 8 || 18 || 15 || 16 || 0 || 13 || 21 |
10:39:00.780: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 30%
10:39:00.781: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 56
10:39:00.801: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 14 || 23 || 21 || 0 || 17 || 19 |
10:39:00.801: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 35%
10:39:00.802: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 48
10:39:00.812: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 23 || 19 || 19 || 37 || 14 || 19 |
10:39:00.812: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 52%
10:39:00.993: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 37 || 20 || 23 || 42 || 36 || 31 |
10:39:00.994: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 70%
10:39:00.998: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 31 || 27 || 36 || 31 || 30 || 39 || 31 |
10:39:00.998: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 75%
10:39:01.004: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 98
10:39:01.015: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 31 || 16 || 14 || 33 || 18 || 24 |
10:39:01.015: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:39:01.025: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 31 || 42 || 26 || 26 || 20 || 31 || 26 |
10:39:01.025: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 67%
10:39:01.025: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 70
10:39:01.055: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 32 || 23 || 24 || 0 || 26 || 21 |
10:39:01.055: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 47%
10:39:01.104: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 27 || 16 || 14 || 0 || 16 || 19 |
10:39:01.104: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 39%
10:39:01.106: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 17 || 20 || 17 || 0 || 21 || 28 |
10:39:01.106: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 40%
10:39:01.140: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 22 || 17 || 23 || 0 || 25 || 20 |
10:39:01.141: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:39:01.174: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 20 || 15 || 17 || 0 || 14 || 17 |
10:39:01.174: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:39:01.189: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 14 || 20 || 16 || 0 || 12 || 19 |
10:39:01.189: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:39:01.191: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 75
10:39:01.191: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 98 || 56 || 75 || 100 || 70 || 48 || 44 |
10:39:01.192: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 3. Benoetigte Rechenzeit 1361ms.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:39:01.192: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
1	-1	0	0	0	0	0
1	1	0	0	0	0	0
-1	-1	1	0	0	0	0
1	-1	-1	1	0	0	0

10:39:01.192: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:01.192: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 5) auf 1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 4) auf -1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 3) auf 1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf -1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (1 | 2) auf 1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.192: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:39:01.192: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:01.193: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.193: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf 1.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:01.193: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf -1.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:01.193: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:01.193: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:39:01.193: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 100
10:39:01.194: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 98
10:39:01.325: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 18 || 27 || 10 || 14 || 0 || 15 |
10:39:01.325: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:39:01.332: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 22 || 21 || 21 || 18 || 0 || 27 |
10:39:01.332: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 42%
10:39:01.338: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 20 || 15 || 19 || 22 || 0 || 15 |
10:39:01.338: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 36%
10:39:01.369: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 8 || 16 || 14 || 13 || 0 || 18 |
10:39:01.369: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:39:01.410: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 26 || 26 || 17 || 32 || 0 || 22 |
10:39:01.410: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:39:01.414: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 18 || 16 || 17 || 20 || 0 || 26 |
10:39:01.415: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 40%
10:39:01.455: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 25 || 23 || 30 || 18 || 0 || 17 |
10:39:01.455: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 46%
10:39:01.475: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 17 || 18 || 28 || 20 || 0 || 18 |
10:39:01.476: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 41%
10:39:01.514: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 14 || 18 || 7 || 14 || 0 || 10 |
10:39:01.514: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 25%
10:39:01.518: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 22 || 27 || 27 || 11 || 0 || 20 |
10:39:01.518: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:39:01.573: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 13 || 11 || 15 || 9 || 0 || 17 |
10:39:01.573: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 28%
10:39:01.590: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 14 || 15 || 8 || 16 || 0 || 26 |
10:39:01.591: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 33%
10:39:01.670: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 38 || 30 || 29 || 44 || 33 || 37 |
10:39:01.671: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 83%
10:39:01.722: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 22 || 21 || 30 || 21 || 21 || 35 |
10:39:01.731: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:39:01.735: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 19 || 25 || 17 || 23 || 0 || 25 |
10:39:01.735: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 45%
10:39:01.757: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 31 || 17 || 24 || 22 || 21 || 36 || 24 |
10:39:01.757: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:39:01.830: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 29 || 33 || 17 || 26 || 26 || 27 |
10:39:01.830: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 63%
10:39:01.831: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 15 || 22 || 25 || 18 || 0 || 24 |
10:39:01.831: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 44%
10:39:01.842: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 19 || 22 || 25 || 25 || 0 || 16 |
10:39:01.842: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 46%
10:39:01.847: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 10 || 13 || 18 || 24 || 0 || 15 |
10:39:01.847: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 35%
10:39:01.926: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 19 || 18 || 18 || 19 || 0 || 20 |
10:39:01.926: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 39%
10:39:01.929: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 16 || 0 || 10 || 10 || 0 || 5 |
10:39:01.929: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 19%
10:39:01.970: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 11 || 15 || 9 || 10 || 0 || 11 |
10:39:01.970: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 24%
10:39:02.022: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 29 || 16 || 13 || 25 || 0 || 22 |
10:39:02.022: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 42%
10:39:02.025: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 83
10:39:02.030: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 11 || 22 || 15 || 7 || 0 || 12 |
10:39:02.030: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 26%
10:39:02.051: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 16 || 12 || 8 || 15 || 0 || 15 |
10:39:02.051: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 28%
10:39:02.052: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 57
10:39:02.088: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 13 || 15 || 12 || 10 || 0 || 21 |
10:39:02.088: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:39:02.089: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 58
10:39:02.115: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 14 || 17 || 9 || 10 || 0 || 17 |
10:39:02.115: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 29%
10:39:02.116: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 63
10:39:02.238: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 35 || 26 || 29 || 22 || 19 || 32 || 35 |
10:39:02.238: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 66%
10:39:02.287: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 39 || 19 || 20 || 17 || 23 || 30 || 24 |
10:39:02.287: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:39:02.288: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 32 || 33 || 32 || 40 || 25 || 28 |
10:39:02.288: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:39:02.294: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 26 || 34 || 17 || 24 || 25 || 32 |
10:39:02.294: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 60%
10:39:02.383: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 26 || 32 || 21 || 16 || 30 || 33 |
10:39:02.383: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 60%
10:39:02.389: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 30 || 27 || 35 || 32 || 35 || 51 |
10:39:02.389: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 83%
10:39:02.412: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 43 || 14 || 32 || 26 || 29 || 27 || 30 |
10:39:02.412: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 67%
10:39:02.412: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 83
10:39:02.412: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 63 || 98 || 57 || 83 || 100 || 83 || 58 |
10:39:02.412: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 4. Benoetigte Rechenzeit 1219ms.
10:39:02.412: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf 1.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.412: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:39:02.412: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	1	-1	0	0	0	0
0	1	1	0	0	0	0
0	-1	-1	1	0	0	0
0	1	-1	-1	1	0	0

10:39:02.412: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:02.412: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.412: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:39:02.412: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 5) auf 1.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:02.412: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 4) auf -1.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.412: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 3) auf 1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf -1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (2 | 2) auf 1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf 1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf -1.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:02.413: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:02.413: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:39:02.419: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 100
10:39:02.497: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 23 || 20 || 20 || 21 || 18 || 0 |
10:39:02.498: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 40%
10:39:02.555: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 31 || 14 || 23 || 13 || 30 || 0 |
10:39:02.555: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 44%
10:39:02.559: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 33 || 28 || 32 || 40 || 31 || 27 || 33 |
10:39:02.559: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 75%
10:39:02.579: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 8 || 8 || 14 || 7 || 10 || 0 |
10:39:02.579: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 17%
10:39:02.637: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 18 || 20 || 16 || 28 || 12 || 24 || 31 |
10:39:02.637: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 50%
10:39:02.646: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 20 || 14 || 19 || 18 || 17 || 0 |
10:39:02.646: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 34%
10:39:02.733: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 35 || 23 || 24 || 30 || 16 || 17 |
10:39:02.734: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 55%
10:39:02.742: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 19 || 21 || 19 || 26 || 14 || 25 || 21 |
10:39:02.742: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 48%
10:39:02.799: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 38 || 32 || 44 || 19 || 33 || 35 |
10:39:02.799: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 78%
10:39:02.834: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 11 || 8 || 11 || 6 || 13 || 0 |
10:39:02.835: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 22%
10:39:02.857: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 31 || 23 || 34 || 31 || 31 || 36 |
10:39:02.857: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 72%
10:39:02.879: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 27 || 19 || 20 || 20 || 9 || 0 |
10:39:02.879: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:39:02.921: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 12 || 8 || 19 || 6 || 19 || 0 |
10:39:02.921: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 27%
10:39:02.921: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 22 || 12 || 19 || 15 || 29 || 21 |
10:39:02.921: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 47%
10:39:02.966: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 27 || 24 || 18 || 25 || 14 || 21 || 0 |
10:39:02.966: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 43%
10:39:03.015: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 22 || 9 || 22 || 31 || 23 || 0 |
10:39:03.015: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 41%
10:39:03.039: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 21 || 15 || 21 || 24 || 28 || 0 |
10:39:03.039: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 44%
10:39:03.107: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 14 || 10 || 12 || 10 || 9 || 0 |
10:39:03.108: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 20%
10:39:03.109: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 48
10:39:03.109: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 25 || 16 || 24 || 17 || 21 || 20 |
10:39:03.110: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 45%
10:39:03.110: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 98
10:39:03.121: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 29 || 22 || 31 || 24 || 18 || 25 || 23 |
10:39:03.121: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:39:03.121: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 75
10:39:03.129: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 14 || 19 || 19 || 17 || 16 || 12 || 0 |
10:39:03.135: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 32%
10:39:03.136: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 78
10:39:03.205: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 11 || 18 || 17 || 18 || 22 || 21 || 0 |
10:39:03.206: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 36%
10:39:03.212: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 5 || 10 || 5 || 11 || 8 || 8 || 0 |
10:39:03.212: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:39:03.228: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 22 || 21 || 19 || 21 || 15 || 0 |
10:39:03.228: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 41%
10:39:03.235: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 13 || 9 || 14 || 16 || 8 || 15 || 0 |
10:39:03.235: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 25%
10:39:03.283: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 18 || 10 || 12 || 19 || 17 || 0 |
10:39:03.284: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 31%
10:39:03.293: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 7 || 14 || 7 || 7 || 8 || 6 || 0 |
10:39:03.293: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 16%
10:39:03.320: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 11 || 16 || 13 || 0 || 5 || 15 || 0 |
10:39:03.320: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 20%
10:39:03.381: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 12 || 12 || 13 || 16 || 10 || 0 |
10:39:03.382: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 24%
10:39:03.403: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 10 || 10 || 13 || 13 || 15 || 7 || 0 |
10:39:03.403: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 23%
10:39:03.428: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 17 || 25 || 16 || 16 || 17 || 12 || 22 |
10:39:03.428: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 42%
10:39:03.428: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 42
10:39:03.464: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 21 || 15 || 16 || 18 || 15 || 0 |
10:39:03.464: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 37%
10:39:03.512: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 21 || 29 || 23 || 21 || 22 || 19 || 28 |
10:39:03.512: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 54%
10:39:03.515: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 6 || 12 || 10 || 7 || 11 || 8 || 0 |
10:39:03.515: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 18%
10:39:03.529: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 15 || 14 || 17 || 10 || 15 || 11 || 0 |
10:39:03.529: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 27%
10:39:03.529: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 54
10:39:03.529: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 42 || 48 || 98 || 54 || 78 || 100 || 75 |
10:39:03.529: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 5. Benoetigte Rechenzeit 1116ms.
10:39:03.529: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf 1.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.529: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:39:03.529: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	1	-1	0	0	0
0	0	1	1	0	0	0
0	0	-1	-1	1	0	0
0	0	1	-1	-1	1	0

10:39:03.529: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:03.529: INFO - game.VierGewinnt >> <start()> VierGewinnt V0.001 gestartet.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.529: INFO - game.VierGewinnt >> <setDifficulty()> Anzahl Iterationen fuer bestMove() auf 300 gesetzt.
10:39:03.529: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 5) auf 1.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.529: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:03.529: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 4) auf -1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 3) auf 1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 5) auf -1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (3 | 2) auf 1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 4) auf -1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 3) auf 1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 5) auf -1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (5 | 4) auf 1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 2 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <play()> Setze Position (4 | 2) auf -1.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:03.530: INFO - game.VierGewinnt >> <Constructor> Spieler 1 am Zug.
10:39:03.530: INFO - game.VierGewinnt >> <bestMove()> Gestartet.
10:39:03.530: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 6 entspricht: 100
10:39:03.680: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 33 || 35 || 39 || 33 || 37 || 33 |
10:39:03.680: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 81%
10:39:03.700: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 22 || 24 || 32 || 22 || 19 || 21 |
10:39:03.700: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:39:03.712: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 31 || 36 || 19 || 0 || 25 || 28 |
10:39:03.713: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 58%
10:39:03.733: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 16 || 18 || 25 || 35 || 36 || 19 |
10:39:03.733: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 57%
10:39:03.798: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 39 || 49 || 34 || 37 || 36 || 23 || 30 |
10:39:03.798: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 83%
10:39:03.863: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 38 || 33 || 28 || 31 || 34 || 43 || 29 |
10:39:03.863: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 79%
10:39:03.865: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 31 || 36 || 37 || 35 || 25 || 31 || 32 |
10:39:03.865: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 76%
10:39:03.874: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 24 || 34 || 42 || 25 || 34 || 26 || 31 |
10:39:03.874: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 72%
10:39:03.934: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 45 || 32 || 26 || 31 || 24 || 39 || 34 |
10:39:03.934: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 77%
10:39:04.048: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 36 || 29 || 38 || 40 || 42 || 28 || 47 |
10:39:04.048: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 87%
10:39:04.066: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 28 || 32 || 41 || 28 || 36 || 21 || 32 |
10:39:04.066: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:39:04.081: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 46 || 26 || 31 || 29 || 35 || 27 || 24 |
10:39:04.081: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:39:04.107: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 26 || 18 || 31 || 33 || 40 || 24 || 31 |
10:39:04.107: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 68%
10:39:04.175: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 35 || 21 || 29 || 43 || 37 || 33 || 26 |
10:39:04.175: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 75%
10:39:04.240: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 29 || 34 || 42 || 36 || 40 || 35 || 34 |
10:39:04.240: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 83%
10:39:04.245: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 35 || 24 || 35 || 43 || 34 || 30 |
10:39:04.245: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 78%
10:39:04.278: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 29 || 32 || 24 || 36 || 26 || 33 |
10:39:04.278: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:39:04.292: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 27 || 33 || 38 || 46 || 34 || 33 |
10:39:04.292: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 81%
10:39:04.372: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 36 || 37 || 26 || 24 || 32 || 29 || 24 |
10:39:04.372: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 69%
10:39:04.413: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 16 || 26 || 24 || 23 || 22 || 22 || 26 |
10:39:04.414: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 53%
10:39:04.428: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 27 || 35 || 28 || 32 || 45 || 30 || 52 |
10:39:04.428: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 83%
10:39:04.429: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 5 entspricht: 87
10:39:04.433: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 3 entspricht: 98
10:39:04.497: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 22 || 34 || 31 || 36 || 29 || 22 |
10:39:04.497: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 69%
10:39:04.497: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 35 || 30 || 39 || 25 || 28 || 31 || 34 |
10:39:04.497: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 74%
10:39:04.559: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 22 || 30 || 39 || 22 || 30 || 23 || 23 |
10:39:04.559: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 63%
10:39:04.598: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 25 || 17 || 27 || 26 || 33 || 17 || 24 |
10:39:04.599: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 56%
10:39:04.610: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 33 || 25 || 32 || 19 || 34 || 22 || 20 |
10:39:04.610: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 62%
10:39:04.611: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 4 entspricht: 83
10:39:04.623: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 20 || 34 || 26 || 17 || 47 || 21 || 29 |
10:39:04.625: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 65%
10:39:04.625: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 0 entspricht: 79
10:39:04.741: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 30 || 32 || 32 || 27 || 33 || 32 || 33 |
10:39:04.742: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 73%
10:39:04.742: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 32 || 33 || 29 || 23 || 28 || 38 || 30 |
10:39:04.742: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 71%
10:39:04.742: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 1 entspricht: 72
10:39:04.752: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 23 || 22 || 19 || 23 || 29 || 27 || 39 |
10:39:04.752: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 61%
10:39:04.803: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 42 || 27 || 23 || 22 || 35 || 21 || 17 |
10:39:04.803: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 62%
10:39:04.860: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 39 || 37 || 29 || 22 || 24 || 34 || 26 |
10:39:04.860: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 70%
10:39:04.924: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 36 || 29 || 33 || 29 || 38 || 25 || 36 |
10:39:04.925: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 75%
10:39:04.927: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 34 || 23 || 26 || 33 || 45 || 28 || 26 |
10:39:04.928: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 72%
10:39:04.939: INFO - game.VierGewinnt >> <monteCarlo()> Gewinnmoeglichkeiten in Prozent: -> | 29 || 29 || 34 || 41 || 37 || 36 || 36 |
10:39:04.939: INFO - game.VierGewinnt >> <monteCarlo()> Durchschnitt: -> 81%
10:39:04.939: INFO - game.VierGewinnt >> <bestMove()> Gewinnbewertung fuer Spiel in Spalte 2 entspricht: 81
10:39:04.939: INFO - game.VierGewinnt >> <bestMove()> Gewinnmoeglichkeiten: -> | 79 || 72 || 81 || 98 || 83 || 87 || 100 |
10:39:04.939: INFO - game.VierGewinnt >> <bestMove()> Ergebnis: Reihe 6. Benoetigte Rechenzeit 1409ms.
10:39:04.939: INFO - game.VierGewinnt >> <play()> Setze Position (6 | 5) auf 1.
10:39:04.939: INFO - game.VierGewinnt >> <Constructor> Neues Spielfeld erstellt.
10:39:04.939: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:04.939: INFO - game.VierGewinnt >> <Constructor> Spiel beendet.
10:39:04.940: INFO - game.VierGewinnt >> <printField()> Aktuelles Feld:
0	0	0	0	0	0	0
0	0	0	0	0	0	0
0	0	0	1	-1	0	0
0	0	0	1	1	0	0
0	0	0	-1	-1	1	0
0	0	0	1	-1	-1	1

10:39:04.940: INFO - game.VierGewinnt >> <hasWon()> Diagonal-Absteigende Siegesposition gefunden. Spieler 1 hat gewonnen.
10:39:04.940: TEST - tests.VierGewinntTest >> <bestMove()> Fuer diagonal-absteigende Siegespositionen erfolgreich getestet.
10:39:04.941: TEST - tests.VierGewinntTest >> Tests erfolgreich durchgefuehrt.
